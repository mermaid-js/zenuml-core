// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,66,657,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,
1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,
13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,
16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,
24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,
27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,
1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,
31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,
1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,
35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,
38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,
1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,
47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,4,51,468,8,51,11,51,12,51,469,
1,52,1,52,4,52,474,8,52,11,52,12,52,475,1,53,1,53,1,53,1,53,5,53,482,8,53,
10,53,12,53,485,9,53,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,4,
56,497,8,56,11,56,12,56,498,1,56,3,56,502,8,56,3,56,504,8,56,1,56,1,56,1,
56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
1,56,1,56,1,56,1,56,1,56,3,56,528,8,56,1,56,1,56,1,57,5,57,533,8,57,10,57,
12,57,536,9,57,1,57,3,57,539,8,57,1,58,1,58,3,58,543,8,58,1,58,1,58,1,58,
1,58,3,58,549,8,58,1,58,1,58,3,58,553,8,58,1,59,1,59,1,59,1,60,1,60,1,60,
1,60,1,61,1,61,5,61,564,8,61,10,61,12,61,567,9,61,1,61,1,61,1,62,1,62,1,
62,1,62,1,62,1,62,1,63,1,63,4,63,579,8,63,11,63,12,63,580,1,63,1,63,1,64,
1,64,1,64,1,64,1,64,1,65,1,65,4,65,592,8,65,11,65,12,65,593,1,65,1,65,1,
66,1,66,5,66,600,8,66,10,66,12,66,603,9,66,1,67,4,67,606,8,67,11,67,12,67,
607,1,67,4,67,611,8,67,11,67,12,67,612,1,67,4,67,616,8,67,11,67,12,67,617,
5,67,620,8,67,10,67,12,67,623,9,67,1,67,3,67,626,8,67,1,68,3,68,629,8,68,
1,68,1,68,1,68,1,68,1,69,4,69,636,8,69,11,69,12,69,637,1,69,1,69,1,70,1,
70,5,70,644,8,70,10,70,12,70,647,9,70,1,70,3,70,650,8,70,1,70,1,70,1,70,
1,70,1,71,1,71,3,483,565,645,0,72,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,0,111,0,113,
0,115,0,117,55,119,56,121,57,123,58,125,0,127,59,129,0,131,60,133,61,135,
62,137,63,139,64,141,65,143,66,1,0,8,3,0,48,57,65,70,97,102,3,0,48,57,65,
90,97,122,2,0,10,10,13,13,2,0,9,9,32,32,3,0,65,90,95,95,97,122,4,0,48,57,
65,90,95,95,97,122,5,0,9,9,32,32,48,57,65,90,97,122,3,0,9,10,13,13,32,32,
678,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,
0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,
0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,117,1,0,0,0,0,119,1,0,
0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,127,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,
0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
1,145,1,0,0,0,3,155,1,0,0,0,5,163,1,0,0,0,7,169,1,0,0,0,9,174,1,0,0,0,11,
178,1,0,0,0,13,183,1,0,0,0,15,189,1,0,0,0,17,192,1,0,0,0,19,197,1,0,0,0,
21,202,1,0,0,0,23,209,1,0,0,0,25,215,1,0,0,0,27,222,1,0,0,0,29,235,1,0,0,
0,31,241,1,0,0,0,33,250,1,0,0,0,35,257,1,0,0,0,37,262,1,0,0,0,39,272,1,0,
0,0,41,276,1,0,0,0,43,281,1,0,0,0,45,292,1,0,0,0,47,301,1,0,0,0,49,311,1,
0,0,0,51,317,1,0,0,0,53,329,1,0,0,0,55,339,1,0,0,0,57,346,1,0,0,0,59,351,
1,0,0,0,61,360,1,0,0,0,63,365,1,0,0,0,65,374,1,0,0,0,67,384,1,0,0,0,69,390,
1,0,0,0,71,400,1,0,0,0,73,408,1,0,0,0,75,418,1,0,0,0,77,423,1,0,0,0,79,432,
1,0,0,0,81,435,1,0,0,0,83,438,1,0,0,0,85,441,1,0,0,0,87,444,1,0,0,0,89,451,
1,0,0,0,91,453,1,0,0,0,93,455,1,0,0,0,95,457,1,0,0,0,97,459,1,0,0,0,99,461,
1,0,0,0,101,463,1,0,0,0,103,465,1,0,0,0,105,471,1,0,0,0,107,477,1,0,0,0,
109,489,1,0,0,0,111,491,1,0,0,0,113,493,1,0,0,0,115,534,1,0,0,0,117,552,
1,0,0,0,119,554,1,0,0,0,121,557,1,0,0,0,123,561,1,0,0,0,125,570,1,0,0,0,
127,576,1,0,0,0,129,584,1,0,0,0,131,589,1,0,0,0,133,597,1,0,0,0,135,605,
1,0,0,0,137,628,1,0,0,0,139,635,1,0,0,0,141,641,1,0,0,0,143,655,1,0,0,0,
145,146,5,64,0,0,146,147,5,115,0,0,147,148,5,116,0,0,148,149,5,97,0,0,149,
150,5,114,0,0,150,151,5,116,0,0,151,152,5,117,0,0,152,153,5,109,0,0,153,
154,5,108,0,0,154,2,1,0,0,0,155,156,5,64,0,0,156,157,5,101,0,0,157,158,5,
110,0,0,158,159,5,100,0,0,159,160,5,117,0,0,160,161,5,109,0,0,161,162,5,
108,0,0,162,4,1,0,0,0,163,164,5,115,0,0,164,165,5,116,0,0,165,166,5,97,0,
0,166,167,5,114,0,0,167,168,5,116,0,0,168,6,1,0,0,0,169,170,5,115,0,0,170,
171,5,116,0,0,171,172,5,111,0,0,172,173,5,112,0,0,173,8,1,0,0,0,174,175,
5,101,0,0,175,176,5,110,0,0,176,177,5,100,0,0,177,10,1,0,0,0,178,179,5,108,
0,0,179,180,5,101,0,0,180,181,5,102,0,0,181,182,5,116,0,0,182,12,1,0,0,0,
183,184,5,114,0,0,184,185,5,105,0,0,185,186,5,103,0,0,186,187,5,104,0,0,
187,188,5,116,0,0,188,14,1,0,0,0,189,190,5,105,0,0,190,191,5,102,0,0,191,
16,1,0,0,0,192,193,5,116,0,0,193,194,5,104,0,0,194,195,5,101,0,0,195,196,
5,110,0,0,196,18,1,0,0,0,197,198,5,101,0,0,198,199,5,108,0,0,199,200,5,115,
0,0,200,201,5,101,0,0,201,20,1,0,0,0,202,203,5,101,0,0,203,204,5,108,0,0,
204,205,5,115,0,0,205,206,5,101,0,0,206,207,5,105,0,0,207,208,5,102,0,0,
208,22,1,0,0,0,209,210,5,101,0,0,210,211,5,110,0,0,211,212,5,100,0,0,212,
213,5,105,0,0,213,214,5,102,0,0,214,24,1,0,0,0,215,216,5,114,0,0,216,217,
5,101,0,0,217,218,5,112,0,0,218,219,5,101,0,0,219,220,5,97,0,0,220,221,5,
116,0,0,221,26,1,0,0,0,222,223,5,114,0,0,223,224,5,101,0,0,224,225,5,112,
0,0,225,226,5,101,0,0,226,227,5,97,0,0,227,228,5,116,0,0,228,229,5,32,0,
0,229,230,5,119,0,0,230,231,5,104,0,0,231,232,5,105,0,0,232,233,5,108,0,
0,233,234,5,101,0,0,234,28,1,0,0,0,235,236,5,119,0,0,236,237,5,104,0,0,237,
238,5,105,0,0,238,239,5,108,0,0,239,240,5,101,0,0,240,30,1,0,0,0,241,242,
5,101,0,0,242,243,5,110,0,0,243,244,5,100,0,0,244,245,5,119,0,0,245,246,
5,104,0,0,246,247,5,105,0,0,247,248,5,108,0,0,248,249,5,101,0,0,249,32,1,
0,0,0,250,251,5,115,0,0,251,252,5,119,0,0,252,253,5,105,0,0,253,254,5,116,
0,0,254,255,5,99,0,0,255,256,5,104,0,0,256,34,1,0,0,0,257,258,5,99,0,0,258,
259,5,97,0,0,259,260,5,115,0,0,260,261,5,101,0,0,261,36,1,0,0,0,262,263,
5,101,0,0,263,264,5,110,0,0,264,265,5,100,0,0,265,266,5,115,0,0,266,267,
5,119,0,0,267,268,5,105,0,0,268,269,5,116,0,0,269,270,5,99,0,0,270,271,5,
104,0,0,271,38,1,0,0,0,272,273,5,110,0,0,273,274,5,111,0,0,274,275,5,116,
0,0,275,40,1,0,0,0,276,277,5,102,0,0,277,278,5,111,0,0,278,279,5,114,0,0,
279,280,5,107,0,0,280,42,1,0,0,0,281,282,5,102,0,0,282,283,5,111,0,0,283,
284,5,114,0,0,284,285,5,107,0,0,285,286,5,32,0,0,286,287,5,97,0,0,287,288,
5,103,0,0,288,289,5,97,0,0,289,290,5,105,0,0,290,291,5,110,0,0,291,44,1,
0,0,0,292,293,5,101,0,0,293,294,5,110,0,0,294,295,5,100,0,0,295,296,5,32,
0,0,296,297,5,102,0,0,297,298,5,111,0,0,298,299,5,114,0,0,299,300,5,107,
0,0,300,46,1,0,0,0,301,302,5,101,0,0,302,303,5,110,0,0,303,304,5,100,0,0,
304,305,5,32,0,0,305,306,5,109,0,0,306,307,5,101,0,0,307,308,5,114,0,0,308,
309,5,103,0,0,309,310,5,101,0,0,310,48,1,0,0,0,311,312,5,115,0,0,312,313,
5,112,0,0,313,314,5,108,0,0,314,315,5,105,0,0,315,316,5,116,0,0,316,50,1,
0,0,0,317,318,5,115,0,0,318,319,5,112,0,0,319,320,5,108,0,0,320,321,5,105,
0,0,321,322,5,116,0,0,322,323,5,32,0,0,323,324,5,97,0,0,324,325,5,103,0,
0,325,326,5,97,0,0,326,327,5,105,0,0,327,328,5,110,0,0,328,52,1,0,0,0,329,
330,5,101,0,0,330,331,5,110,0,0,331,332,5,100,0,0,332,333,5,32,0,0,333,334,
5,115,0,0,334,335,5,112,0,0,335,336,5,108,0,0,336,337,5,105,0,0,337,338,
5,116,0,0,338,54,1,0,0,0,339,340,5,100,0,0,340,341,5,101,0,0,341,342,5,116,
0,0,342,343,5,97,0,0,343,344,5,99,0,0,344,345,5,104,0,0,345,56,1,0,0,0,346,
347,5,107,0,0,347,348,5,105,0,0,348,349,5,108,0,0,349,350,5,108,0,0,350,
58,1,0,0,0,351,352,5,98,0,0,352,353,5,97,0,0,353,354,5,99,0,0,354,355,5,
107,0,0,355,356,5,119,0,0,356,357,5,97,0,0,357,358,5,114,0,0,358,359,5,100,
0,0,359,60,1,0,0,0,360,361,5,110,0,0,361,362,5,111,0,0,362,363,5,116,0,0,
363,364,5,101,0,0,364,62,1,0,0,0,365,366,5,101,0,0,366,367,5,110,0,0,367,
368,5,100,0,0,368,369,5,32,0,0,369,370,5,110,0,0,370,371,5,111,0,0,371,372,
5,116,0,0,372,373,5,101,0,0,373,64,1,0,0,0,374,375,5,112,0,0,375,376,5,97,
0,0,376,377,5,114,0,0,377,378,5,116,0,0,378,379,5,105,0,0,379,380,5,116,
0,0,380,381,5,105,0,0,381,382,5,111,0,0,382,383,5,110,0,0,383,66,1,0,0,0,
384,385,5,103,0,0,385,386,5,114,0,0,386,387,5,111,0,0,387,388,5,117,0,0,
388,389,5,112,0,0,389,68,1,0,0,0,390,391,5,101,0,0,391,392,5,110,0,0,392,
393,5,100,0,0,393,394,5,32,0,0,394,395,5,103,0,0,395,396,5,114,0,0,396,397,
5,111,0,0,397,398,5,117,0,0,398,399,5,112,0,0,399,70,1,0,0,0,400,401,5,112,
0,0,401,402,5,97,0,0,402,403,5,99,0,0,403,404,5,107,0,0,404,405,5,97,0,0,
405,406,5,103,0,0,406,407,5,101,0,0,407,72,1,0,0,0,408,409,5,114,0,0,409,
410,5,101,0,0,410,411,5,99,0,0,411,412,5,116,0,0,412,413,5,97,0,0,413,414,
5,110,0,0,414,415,5,103,0,0,415,416,5,108,0,0,416,417,5,101,0,0,417,74,1,
0,0,0,418,419,5,99,0,0,419,420,5,97,0,0,420,421,5,114,0,0,421,422,5,100,
0,0,422,76,1,0,0,0,423,424,5,102,0,0,424,425,5,108,0,0,425,426,5,111,0,0,
426,427,5,97,0,0,427,428,5,116,0,0,428,429,5,105,0,0,429,430,5,110,0,0,430,
431,5,103,0,0,431,78,1,0,0,0,432,433,5,105,0,0,433,434,5,115,0,0,434,80,
1,0,0,0,435,436,5,97,0,0,436,437,5,115,0,0,437,82,1,0,0,0,438,439,5,111,
0,0,439,440,5,102,0,0,440,84,1,0,0,0,441,442,5,111,0,0,442,443,5,110,0,0,
443,86,1,0,0,0,444,445,5,101,0,0,445,446,5,113,0,0,446,447,5,117,0,0,447,
448,5,97,0,0,448,449,5,108,0,0,449,450,5,115,0,0,450,88,1,0,0,0,451,452,
5,40,0,0,452,90,1,0,0,0,453,454,5,41,0,0,454,92,1,0,0,0,455,456,5,123,0,
0,456,94,1,0,0,0,457,458,5,125,0,0,458,96,1,0,0,0,459,460,5,91,0,0,460,98,
1,0,0,0,461,462,5,93,0,0,462,100,1,0,0,0,463,464,5,124,0,0,464,102,1,0,0,
0,465,467,5,35,0,0,466,468,7,0,0,0,467,466,1,0,0,0,468,469,1,0,0,0,469,467,
1,0,0,0,469,470,1,0,0,0,470,104,1,0,0,0,471,473,5,35,0,0,472,474,7,1,0,0,
473,472,1,0,0,0,474,475,1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,106,
1,0,0,0,477,478,5,60,0,0,478,479,5,60,0,0,479,483,1,0,0,0,480,482,9,0,0,
0,481,480,1,0,0,0,482,485,1,0,0,0,483,484,1,0,0,0,483,481,1,0,0,0,484,486,
1,0,0,0,485,483,1,0,0,0,486,487,5,62,0,0,487,488,5,62,0,0,488,108,1,0,0,
0,489,490,5,58,0,0,490,110,1,0,0,0,491,492,5,59,0,0,492,112,1,0,0,0,493,
503,5,91,0,0,494,496,5,35,0,0,495,497,7,1,0,0,496,495,1,0,0,0,497,498,1,
0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,501,1,0,0,0,500,502,5,44,0,0,501,
500,1,0,0,0,501,502,1,0,0,0,502,504,1,0,0,0,503,494,1,0,0,0,503,504,1,0,
0,0,504,527,1,0,0,0,505,506,5,100,0,0,506,507,5,111,0,0,507,508,5,116,0,
0,508,509,5,116,0,0,509,510,5,101,0,0,510,528,5,100,0,0,511,512,5,100,0,
0,512,513,5,97,0,0,513,514,5,115,0,0,514,515,5,104,0,0,515,516,5,101,0,0,
516,528,5,100,0,0,517,518,5,98,0,0,518,519,5,111,0,0,519,520,5,108,0,0,520,
528,5,100,0,0,521,522,5,104,0,0,522,523,5,105,0,0,523,524,5,100,0,0,524,
525,5,100,0,0,525,526,5,101,0,0,526,528,5,110,0,0,527,505,1,0,0,0,527,511,
1,0,0,0,527,517,1,0,0,0,527,521,1,0,0,0,527,528,1,0,0,0,528,529,1,0,0,0,
529,530,5,93,0,0,530,114,1,0,0,0,531,533,8,2,0,0,532,531,1,0,0,0,533,536,
1,0,0,0,534,532,1,0,0,0,534,535,1,0,0,0,535,538,1,0,0,0,536,534,1,0,0,0,
537,539,3,111,55,0,538,537,1,0,0,0,538,539,1,0,0,0,539,116,1,0,0,0,540,542,
5,45,0,0,541,543,3,113,56,0,542,541,1,0,0,0,542,543,1,0,0,0,543,544,1,0,
0,0,544,545,5,45,0,0,545,553,5,62,0,0,546,548,5,45,0,0,547,549,3,113,56,
0,548,547,1,0,0,0,548,549,1,0,0,0,549,550,1,0,0,0,550,551,5,62,0,0,551,553,
3,115,57,0,552,540,1,0,0,0,552,546,1,0,0,0,553,118,1,0,0,0,554,555,5,60,
0,0,555,556,5,45,0,0,556,120,1,0,0,0,557,558,5,60,0,0,558,559,5,45,0,0,559,
560,5,62,0,0,560,122,1,0,0,0,561,565,3,109,54,0,562,564,9,0,0,0,563,562,
1,0,0,0,564,567,1,0,0,0,565,566,1,0,0,0,565,563,1,0,0,0,566,568,1,0,0,0,
567,565,1,0,0,0,568,569,3,111,55,0,569,124,1,0,0,0,570,571,5,108,0,0,571,
572,5,97,0,0,572,573,5,98,0,0,573,574,5,101,0,0,574,575,5,108,0,0,575,126,
1,0,0,0,576,578,3,125,62,0,577,579,7,3,0,0,578,577,1,0,0,0,579,580,1,0,0,
0,580,578,1,0,0,0,580,581,1,0,0,0,581,582,1,0,0,0,582,583,3,133,66,0,583,
128,1,0,0,0,584,585,5,103,0,0,585,586,5,111,0,0,586,587,5,116,0,0,587,588,
5,111,0,0,588,130,1,0,0,0,589,591,3,129,64,0,590,592,7,3,0,0,591,590,1,0,
0,0,592,593,1,0,0,0,593,591,1,0,0,0,593,594,1,0,0,0,594,595,1,0,0,0,595,
596,3,133,66,0,596,132,1,0,0,0,597,601,7,4,0,0,598,600,7,5,0,0,599,598,1,
0,0,0,600,603,1,0,0,0,601,599,1,0,0,0,601,602,1,0,0,0,602,134,1,0,0,0,603,
601,1,0,0,0,604,606,7,1,0,0,605,604,1,0,0,0,606,607,1,0,0,0,607,605,1,0,
0,0,607,608,1,0,0,0,608,621,1,0,0,0,609,611,7,6,0,0,610,609,1,0,0,0,611,
612,1,0,0,0,612,610,1,0,0,0,612,613,1,0,0,0,613,615,1,0,0,0,614,616,7,1,
0,0,615,614,1,0,0,0,616,617,1,0,0,0,617,615,1,0,0,0,617,618,1,0,0,0,618,
620,1,0,0,0,619,610,1,0,0,0,620,623,1,0,0,0,621,619,1,0,0,0,621,622,1,0,
0,0,622,625,1,0,0,0,623,621,1,0,0,0,624,626,5,63,0,0,625,624,1,0,0,0,625,
626,1,0,0,0,626,136,1,0,0,0,627,629,5,13,0,0,628,627,1,0,0,0,628,629,1,0,
0,0,629,630,1,0,0,0,630,631,5,10,0,0,631,632,1,0,0,0,632,633,6,68,0,0,633,
138,1,0,0,0,634,636,7,7,0,0,635,634,1,0,0,0,636,637,1,0,0,0,637,635,1,0,
0,0,637,638,1,0,0,0,638,639,1,0,0,0,639,640,6,69,0,0,640,140,1,0,0,0,641,
645,5,39,0,0,642,644,9,0,0,0,643,642,1,0,0,0,644,647,1,0,0,0,645,646,1,0,
0,0,645,643,1,0,0,0,646,649,1,0,0,0,647,645,1,0,0,0,648,650,5,13,0,0,649,
648,1,0,0,0,649,650,1,0,0,0,650,651,1,0,0,0,651,652,5,10,0,0,652,653,1,0,
0,0,653,654,6,70,0,0,654,142,1,0,0,0,655,656,9,0,0,0,656,144,1,0,0,0,26,
0,469,475,483,498,501,503,527,534,538,542,548,552,565,580,593,601,607,612,
617,621,625,628,637,645,649,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class activityLexer extends antlr4.Lexer {

    static grammarFileName = "activityLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@startuml'", "'@enduml'", "'start'", "'stop'", 
                         "'end'", "'left'", "'right'", "'if'", "'then'", 
                         "'else'", "'elseif'", "'endif'", "'repeat'", "'repeat while'", 
                         "'while'", "'endwhile'", "'switch'", "'case'", 
                         "'endswitch'", "'not'", "'fork'", "'fork again'", 
                         "'end fork'", "'end merge'", "'split'", "'split again'", 
                         "'end split'", "'detach'", "'kill'", "'backward'", 
                         "'note'", "'end note'", "'partition'", "'group'", 
                         "'end group'", "'package'", "'rectangle'", "'card'", 
                         "'floating'", "'is'", "'as'", "'of'", "'on'", "'equals'", 
                         "'('", "')'", "'{'", "'}'", "'['", "']'", "'|'", 
                         null, null, null, null, "'<-'", "'<->'" ];
	static symbolicNames = [ null, "STARTUML", "ENDUML", "START", "STOP", "END", 
                          "LEFT", "RIGHT", "IF", "THEN", "ELSE", "ELSEIF", 
                          "ENDIF", "REPEAT", "REPEAT_WHILE", "WHILE", "ENDWHILE", 
                          "SWITCH", "CASE", "ENDSWITCH", "NOT", "FORK", 
                          "FORK_AGAIN", "END_FORK", "END_MERGE", "SPLIT", 
                          "SPLIT_AGAIN", "END_SPLIT", "DETACH", "KILL", 
                          "BACKWARD", "NOTE", "END_NOTE", "PARTITION", "GROUP", 
                          "END_GROUP", "PACKAGE", "RECTANGLE", "CARD", "FLOATING", 
                          "IS", "AS", "OF", "ON", "EQUALS", "LPAREN", "RPAREN", 
                          "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "PIPE", 
                          "COLOR", "COLOR_NAME", "STEREOTYPE", "ARROW", 
                          "REVERSE_ARROW", "DOUBLE_ARROW", "ACTIVITY_CONTENT", 
                          "LABEL_STATEMENT", "GOTO_STATEMENT", "IDENTIFIER", 
                          "ACTIVITY_LABEL", "NEWLINE", "WS", "COMMENT", 
                          "OTHER" ];
	static ruleNames = [ "STARTUML", "ENDUML", "START", "STOP", "END", "LEFT", 
                      "RIGHT", "IF", "THEN", "ELSE", "ELSEIF", "ENDIF", 
                      "REPEAT", "REPEAT_WHILE", "WHILE", "ENDWHILE", "SWITCH", 
                      "CASE", "ENDSWITCH", "NOT", "FORK", "FORK_AGAIN", 
                      "END_FORK", "END_MERGE", "SPLIT", "SPLIT_AGAIN", "END_SPLIT", 
                      "DETACH", "KILL", "BACKWARD", "NOTE", "END_NOTE", 
                      "PARTITION", "GROUP", "END_GROUP", "PACKAGE", "RECTANGLE", 
                      "CARD", "FLOATING", "IS", "AS", "OF", "ON", "EQUALS", 
                      "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", 
                      "RBRACKET", "PIPE", "COLOR", "COLOR_NAME", "STEREOTYPE", 
                      "COLON", "SEMICOLON", "ARROW_STYLE", "ARROW_TEXT", 
                      "ARROW", "REVERSE_ARROW", "DOUBLE_ARROW", "ACTIVITY_CONTENT", 
                      "LABEL", "LABEL_STATEMENT", "GOTO", "GOTO_STATEMENT", 
                      "IDENTIFIER", "ACTIVITY_LABEL", "NEWLINE", "WS", "COMMENT", 
                      "OTHER" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

activityLexer.EOF = antlr4.Token.EOF;
activityLexer.STARTUML = 1;
activityLexer.ENDUML = 2;
activityLexer.START = 3;
activityLexer.STOP = 4;
activityLexer.END = 5;
activityLexer.LEFT = 6;
activityLexer.RIGHT = 7;
activityLexer.IF = 8;
activityLexer.THEN = 9;
activityLexer.ELSE = 10;
activityLexer.ELSEIF = 11;
activityLexer.ENDIF = 12;
activityLexer.REPEAT = 13;
activityLexer.REPEAT_WHILE = 14;
activityLexer.WHILE = 15;
activityLexer.ENDWHILE = 16;
activityLexer.SWITCH = 17;
activityLexer.CASE = 18;
activityLexer.ENDSWITCH = 19;
activityLexer.NOT = 20;
activityLexer.FORK = 21;
activityLexer.FORK_AGAIN = 22;
activityLexer.END_FORK = 23;
activityLexer.END_MERGE = 24;
activityLexer.SPLIT = 25;
activityLexer.SPLIT_AGAIN = 26;
activityLexer.END_SPLIT = 27;
activityLexer.DETACH = 28;
activityLexer.KILL = 29;
activityLexer.BACKWARD = 30;
activityLexer.NOTE = 31;
activityLexer.END_NOTE = 32;
activityLexer.PARTITION = 33;
activityLexer.GROUP = 34;
activityLexer.END_GROUP = 35;
activityLexer.PACKAGE = 36;
activityLexer.RECTANGLE = 37;
activityLexer.CARD = 38;
activityLexer.FLOATING = 39;
activityLexer.IS = 40;
activityLexer.AS = 41;
activityLexer.OF = 42;
activityLexer.ON = 43;
activityLexer.EQUALS = 44;
activityLexer.LPAREN = 45;
activityLexer.RPAREN = 46;
activityLexer.LBRACE = 47;
activityLexer.RBRACE = 48;
activityLexer.LBRACKET = 49;
activityLexer.RBRACKET = 50;
activityLexer.PIPE = 51;
activityLexer.COLOR = 52;
activityLexer.COLOR_NAME = 53;
activityLexer.STEREOTYPE = 54;
activityLexer.ARROW = 55;
activityLexer.REVERSE_ARROW = 56;
activityLexer.DOUBLE_ARROW = 57;
activityLexer.ACTIVITY_CONTENT = 58;
activityLexer.LABEL_STATEMENT = 59;
activityLexer.GOTO_STATEMENT = 60;
activityLexer.IDENTIFIER = 61;
activityLexer.ACTIVITY_LABEL = 62;
activityLexer.NEWLINE = 63;
activityLexer.WS = 64;
activityLexer.COMMENT = 65;
activityLexer.OTHER = 66;



